{
	// Place your aoc2018 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"aoc": {
		"prefix": "",
		"body": [
			"module Day${1:day}.Day${1:day} (day${1:day}) where",
			"",
			"import AOC.AOC",
			"import Control.Exception (assert)",
			"import Debug.Trace (trace, traceShow, traceId, traceShowId)",
			"import Data.List.Split (splitOn)",
			"",
			"-- Common functionality Part 1 and Part 2",
			"",
			"beforeParseInput = id",
			"afterParseInput = id",
			"parseInputLine = Just",
			"",
			"",
			"-- Solution Part 1",
			"",
			"solvePart1 = id",
			"",
			"",
			"-- Solution Part 2",
			"",
			"solvePart2 = id",
			"",
			"",
			"-- Show Solution for Examples & Puzzles",
			"",
			"problems = [",
			"\t\tExample 1 solver1 (expectedValue [])",
			"\t\t-- , Puzzle solver1 (expectedValue Nothing)",
			"\t\t-- , Example 1 solver2 (expectedValue [])",
			"\t\t-- , Puzzle solver2 (expectedValue Nothing)",
			"\t\t]",
			"\twhere",
			"\t\tsolver1 = Solver 1 parseInputLine beforeParseInput afterParseInput solvePart1",
			"\t\tsolver2 = Solver 2 parseInputLine beforeParseInput afterParseInput solvePart2",
			"",
			"",
			"day${1:day} :: IO ()",
			"day${1:day} = solveDay ${1:day} problems"
		]
	}	
}